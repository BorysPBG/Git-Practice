let arr = [1, 2, 3, 'four', 'five'];

// Метод push() меняет исходный массив, добавляя элемент(-ы) в конец массива
// Возвращает новую длину массива
console.log("======= PUSH =======");
let res = arr.push(6, 7, 8);
console.log(arr); // [1, 2, 3, 'four', 'five', 6, 7, 8]
console.log(res); // 8


// Метод pop() меняет исходный массив, удаляя последний элемент массива
// Возвращает удалённый элемент
console.log("======= POP =======");
res = arr.pop();
console.log(arr); // [1, 2, 3, 'four', 'five', 6, 7]
console.log(res); // 8


// Метод shift() меняет исходный массив, удаляя первый элемент массива
// Возвращает удалённый элемент
console.log("======= SHIFT =======");
res = arr.shift();
console.log(arr); // [2, 3, 'four', 'five', 6, 7]
console.log(res); // 1


// Метод unshift() меняет исходный массив, добавляя элемент(-ы) в начало массива
// Возвращает новую длину массива
console.log("======= UNSHIFT =======");
res = arr.unshift(0, 1);
console.log(arr); // [0, 1, 2, 3, 'four', 'five', 6, 7]
console.log(res); // 8


// Метод splice() меняет исходный массив, вырезая секцию массива из оригинала
// Возвращает вырезанную секцию массива
console.log("======= SPLICE =======");
res = arr.splice(0, 1); // первый параметр индекс стартового элемента, второй - кол-во удаляемых элементов
console.log(arr); // [1, 2, 3, 'four', 'five', 6, 7]
console.log(res); // [0]


// Метод slice() не меняет исходный массив, копируя секцию массива из оригинала
// Возвращает скопированную секцию массива
console.log("======= SLICE =======");
res = arr.slice(2, 5); // первый параметр индекс стартового элемента, второй - индекс конечного элемента секции (не входит в диапазон)
console.log(arr); // [1, 2, 3, 'four', 'five', 6, 7]
console.log(res); // [3, 'four', 'five']

//Homework
//1234 -> 1 + 2 + 3 + 4 = 10
function sumDigits(x) {
    let sum = 0;

    while (x !== 0) {
      sum += x % 10;
      x = (x - (x % 10))   
    }
    return sum;
}
